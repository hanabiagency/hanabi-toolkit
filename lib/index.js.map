{"version":3,"file":"index.js","sources":["../src/utils.ts","../src/Row/styles.ts","../src/Row/index.tsx","../src/Stack/styles.ts","../src/Stack/index.tsx"],"sourcesContent":["import { css, SerializedStyles } from \"@emotion/react\";\n\nexport type deviceProp<T> = { [device: number]: T };\n\nexport type mediaProp<T> = [T, deviceProp<T>];\n\nexport type responsiveProp<T> = T | mediaProp<T>;\n\nexport type atomicFunction = (prop: any) => SerializedStyles | null;\n\nexport function applyResponsiveCss(atomicFunction: atomicFunction) {\n  return function responsiveCss(responsiveProp: responsiveProp<any>) {\n    if (Array.isArray(responsiveProp)) {\n      const [defaultValue, responsiveValues] = responsiveProp;\n      const defaultStyle = atomicFunction(defaultValue);\n      const responsiveStyles = Object.entries(responsiveValues)\n        .sort((a, b) => +b[0] - +a[0])\n        .map(\n          ([key, value]) =>\n            css`\n              @media screen and (max-width: ${key}px) {\n                ${atomicFunction(value)};\n              }\n            `\n        );\n      return [defaultStyle, responsiveStyles];\n    }\n    return atomicFunction(responsiveProp);\n  };\n}\n","import { css } from \"@emotion/react\";\n\nimport { responsiveProp, applyResponsiveCss } from \"../utils\";\n\nexport type gap = \"spaceBetween\" | number;\n\nexport type align = \"start\" | \"center\" | \"end\" | \"stretch\";\n\nexport const row = css`\n  display: flex;\n`;\n\nexport const rowWrap = (wrap: boolean) => css`\n  flex-wrap: ${wrap ? \"wrap\" : \"nowrap\"};\n`;\n\nexport const rowAlign = applyResponsiveCss((align: align) => {\n  let cssAlign = align === \"start\" || align === \"end\" ? `flex-${align}` : align;\n  return css`\n    align-items: ${cssAlign};\n  `;\n});\n\nexport const rowGap = applyResponsiveCss((gap: gap) =>\n  gap === \"spaceBetween\"\n    ? css`\n        justify-content: space-between;\n      `\n    : css`\n        margin-left: ${-gap}px;\n      `\n);\n\nexport const rowVGap = applyResponsiveCss((vGap: gap) =>\n  !vGap\n    ? null\n    : css`\n        margin-top: ${-vGap}px;\n      `\n);\n\nexport const wrapBefore = (screenSize: number) => css`\n  @media screen and (max-width: ${screenSize}px) {\n    flex-direction: column;\n  }\n`;\n\nexport const box = css`\n  display: flex;\n\n  & > * {\n    flex: 1;\n  }\n`;\n\nexport const boxGap = applyResponsiveCss((gap: gap) =>\n  gap === \"spaceBetween\"\n    ? null\n    : css`\n        margin-left: ${gap}px;\n      `\n);\n\nexport const boxVGap = applyResponsiveCss(\n  (vGap: gap) => css`\n    margin-top: ${vGap}px;\n  `\n);\n","import React from \"react\";\n\nimport { responsiveProp } from \"../utils\";\n\nimport * as styles from \"./styles\";\n\ninterface RowProps {\n  gap: responsiveProp<styles.gap>;\n  vGap?: responsiveProp<styles.gap>;\n  align?: responsiveProp<styles.align>;\n  wrap?: boolean;\n  wrapBefore?: number;\n  children: React.ReactNode;\n}\n\nexport default function Row({\n  gap,\n  vGap,\n  align = \"start\",\n  wrap = true,\n  wrapBefore,\n  children,\n}: RowProps) {\n  return (\n    <div\n      css={[\n        styles.row,\n        styles.rowWrap(wrap),\n        styles.rowAlign(align),\n        styles.rowGap(gap),\n        styles.rowVGap(vGap),\n        !wrapBefore ? null : styles.wrapBefore(wrapBefore),\n      ]}\n    >\n      {React.Children.map(children, (child, index) =>\n        !child ? null : (\n          <div\n            key={index}\n            css={[styles.box, styles.boxGap(gap), styles.boxVGap(vGap)]}\n          >\n            {child}\n          </div>\n        )\n      )}\n    </div>\n  );\n}\n","import { css } from \"@emotion/react\";\n\nimport { applyResponsiveCss } from \"../utils\";\n\nexport type align = \"start\" | \"center\" | \"end\" | \"stretch\";\n\nexport const stack = css`\n  display: grid;\n  grid-template-rows: auto;\n\n  & > * {\n    min-width: 0;\n  }\n`;\n\nexport const align = applyResponsiveCss((alignValue: align) => {\n  let cssAlign =\n    alignValue === \"start\" || alignValue === \"end\"\n      ? `flex-${alignValue}`\n      : alignValue;\n  return css`\n    justify-items: ${cssAlign};\n  `;\n});\n\nexport const stackGap = applyResponsiveCss(\n  (gap: number) => css`\n    row-gap: ${gap}px;\n  `\n);\n","import React from \"react\";\n\nimport { responsiveProp } from \"../utils\";\nimport * as styles from \"./styles\";\n\ntype StackProps = {\n  gap: responsiveProp<number>;\n  align?: responsiveProp<styles.align>;\n  children: React.ReactNode;\n};\n\nexport default function Stack({ gap, align = \"center\", children }: StackProps) {\n  return (\n    <div css={[styles.stack, styles.align(align), styles.stackGap(gap)]}>\n      {children}\n    </div>\n  );\n}\n"],"names":["applyResponsiveCss","atomicFunction","responsiveCss","responsiveProp","Array","isArray","defaultValue","responsiveValues","defaultStyle","responsiveStyles","Object","entries","sort","a","b","map","key","value","css","row","rowWrap","wrap","rowAlign","align","cssAlign","rowGap","gap","rowVGap","vGap","wrapBefore","screenSize","box","boxGap","boxVGap","Row","children","_jsx","styles","React","Children","child","index","stack","alignValue","stackGap","Stack"],"mappings":"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"}