{"version":3,"file":"index.es.min.js","sources":["../src/utils.ts","../src/Row/styles.ts","../src/Row/index.tsx","../src/Stack/styles.ts","../src/Stack/index.tsx"],"sourcesContent":["import { css, SerializedStyles } from \"@emotion/react\";\n\nexport type deviceProp<T> = { [device: number]: T };\n\nexport type mediaProp<T> = [T, deviceProp<T>];\n\nexport type responsiveProp<T> = T | mediaProp<T>;\n\nexport type atomicFunction = (prop: any) => SerializedStyles | null;\n\nexport function applyResponsiveCss(atomicFunction: atomicFunction) {\n  return function responsiveCss(responsiveProp: responsiveProp<any>) {\n    if (Array.isArray(responsiveProp)) {\n      const [defaultValue, responsiveValues] = responsiveProp;\n      const defaultStyle = atomicFunction(defaultValue);\n      const responsiveStyles = Object.entries(responsiveValues)\n        .sort((a, b) => +b[0] - +a[0])\n        .map(\n          ([key, value]) =>\n            css`\n              @media screen and (max-width: ${key}px) {\n                ${atomicFunction(value)};\n              }\n            `\n        );\n      return [defaultStyle, responsiveStyles];\n    }\n    return atomicFunction(responsiveProp);\n  };\n}\n","import { css } from \"@emotion/react\";\n\nimport { responsiveProp, applyResponsiveCss } from \"../utils\";\n\nexport type gap = \"spaceBetween\" | number;\n\nexport type align = \"start\" | \"center\" | \"end\" | \"stretch\";\n\nexport const row = css`\n  display: flex;\n`;\n\nexport const rowWrap = (wrap: boolean) => css`\n  flex-wrap: ${wrap ? \"wrap\" : \"nowrap\"};\n`;\n\nexport const rowAlign = applyResponsiveCss((align: align) => {\n  let cssAlign = align === \"start\" || align === \"end\" ? `flex-${align}` : align;\n  return css`\n    align-items: ${cssAlign};\n  `;\n});\n\nexport const rowGap = applyResponsiveCss((gap: gap) =>\n  gap === \"spaceBetween\"\n    ? css`\n        justify-content: space-between;\n      `\n    : css`\n        margin-left: ${-gap}px;\n      `\n);\n\nexport const rowVGap = applyResponsiveCss((vGap: gap) =>\n  !vGap\n    ? null\n    : css`\n        margin-top: ${-vGap}px;\n      `\n);\n\nexport const wrapBefore = (screenSize: number) => css`\n  @media screen and (max-width: ${screenSize}px) {\n    flex-direction: column;\n  }\n`;\n\nexport const box = css`\n  display: flex;\n\n  & > * {\n    flex: 1;\n  }\n`;\n\nexport const boxGap = applyResponsiveCss((gap: gap) =>\n  gap === \"spaceBetween\"\n    ? null\n    : css`\n        margin-left: ${gap}px;\n      `\n);\n\nexport const boxVGap = applyResponsiveCss(\n  (vGap: gap) => css`\n    margin-top: ${vGap}px;\n  `\n);\n","import React from \"react\";\n\nimport { responsiveProp } from \"../utils\";\n\nimport * as styles from \"./styles\";\n\ninterface RowProps {\n  gap: responsiveProp<styles.gap>;\n  vGap?: responsiveProp<styles.gap>;\n  align?: responsiveProp<styles.align>;\n  wrap?: boolean;\n  wrapBefore?: number;\n  children: React.ReactNode;\n}\n\nexport default function Row({\n  gap,\n  vGap,\n  align = \"start\",\n  wrap = true,\n  wrapBefore,\n  children,\n}: RowProps) {\n  return (\n    <div\n      css={[\n        styles.row,\n        styles.rowWrap(wrap),\n        styles.rowAlign(align),\n        styles.rowGap(gap),\n        styles.rowVGap(vGap),\n        !wrapBefore ? null : styles.wrapBefore(wrapBefore),\n      ]}\n    >\n      {React.Children.map(children, (child, index) =>\n        !child ? null : (\n          <div\n            key={index}\n            css={[styles.box, styles.boxGap(gap), styles.boxVGap(vGap)]}\n          >\n            {child}\n          </div>\n        )\n      )}\n    </div>\n  );\n}\n","import { css } from \"@emotion/react\";\n\nimport { applyResponsiveCss } from \"../utils\";\n\nexport type align = \"start\" | \"center\" | \"end\" | \"stretch\";\n\nexport const stack = css`\n  display: grid;\n  grid-template-rows: auto;\n\n  & > * {\n    min-width: 0;\n  }\n`;\n\nexport const align = applyResponsiveCss((alignValue: align) => {\n  let cssAlign =\n    alignValue === \"start\" || alignValue === \"end\"\n      ? `flex-${alignValue}`\n      : alignValue;\n  return css`\n    justify-items: ${cssAlign};\n  `;\n});\n\nexport const stackGap = applyResponsiveCss(\n  (gap: number) => css`\n    row-gap: ${gap}px;\n  `\n);\n","import React from \"react\";\n\nimport { responsiveProp } from \"../utils\";\nimport * as styles from \"./styles\";\n\ntype StackProps = {\n  gap: responsiveProp<number>;\n  align?: responsiveProp<styles.align>;\n  children: React.ReactNode;\n};\n\nexport default function Stack({ gap, align = \"center\", children }: StackProps) {\n  return (\n    <div css={[styles.stack, styles.align(align), styles.stackGap(gap)]}>\n      {children}\n    </div>\n  );\n}\n"],"names":["applyResponsiveCss","atomicFunction","responsiveProp","Array","isArray","defaultValue","responsiveValues","Object","entries","sort","a","b","map","key","value","css","row","rowWrap","wrap","rowAlign","align","cssAlign","rowGap","gap","rowVGap","vGap","box","boxGap","boxVGap","Row","screenSize","wrapBefore","children","_jsx","styles","React","Children","child","index","stack","alignValue","stackGap","Stack"],"mappings":"usCAUO,SAASA,EAAmBC,UAC1B,SAAuBC,MACxBC,MAAMC,QAAQF,GAAiB,SACQA,KAAlCG,OAAcC,aAYd,CAXcL,EAAeI,GACXE,OAAOC,QAAQF,GACrCG,MAAK,SAACC,EAAGC,UAAOA,EAAE,IAAMD,EAAE,MAC1BE,KACC,yBAAEC,OAAKC,cACLC,4HACkCF,EAC5BZ,EAAea,eAMtBb,EAAeC,ICnBnB,UAAMc,EAAMD,sCAINE,EAAU,SAACC,UAAkBH,sCAC3BG,EAAO,OAAS,WAGlBC,EAAWnB,GAAmB,SAACoB,OACtCC,EAAqB,UAAVD,GAA+B,QAAVA,iBAA0BA,GAAUA,SACjEL,4CACUM,MAINC,EAAStB,GAAmB,SAACuB,SAChC,iBAARA,EACIR,mEAGAA,uDACkBQ,MAIXC,EAAUxB,GAAmB,SAACyB,UACxCA,EAEGV,sDACiBU,GAFjB,QAYOC,EAAMX,sEAQNY,EAAS3B,GAAmB,SAACuB,SAChC,iBAARA,EACI,KACAR,sDACiBQ,MAIVK,EAAU5B,GACrB,SAACyB,UAAcV,6CACCU,MClDH,SAASI,SD0BGC,ECzBzBP,IAAAA,IACAE,IAAAA,SACAL,MAAAA,aAAQ,cACRF,KAAAA,gBACAa,IAAAA,WACAC,IAAAA,gBAGEC,SACElB,IAAK,CACHmB,EACAA,EAAehB,GACfgB,EAAgBd,GAChBc,EAAcX,GACdW,EAAeT,GACdM,GDUkBD,ECVoBC,EDUGhB,+FAChBe,ICXZ,eAGfK,EAAMC,SAASxB,IAAIoB,GAAU,SAACK,EAAOC,UACnCD,EACCJ,SAEElB,IAAK,CAACmB,EAAYA,EAAcX,GAAMW,EAAeT,aAEpDY,GAHIC,GAFA,UC7BV,IAAMC,EAAQxB,wGASRK,EAAQpB,GAAmB,SAACwC,OACnCnB,EACa,UAAfmB,GAAyC,QAAfA,iBACdA,GACRA,SACCzB,8CACYM,MAIRoB,EAAWzC,GACtB,SAACuB,UAAgBR,0CACJQ,MChBA,SAASmB,SAAQnB,IAAAA,QAAKH,MAAAA,aAAQ,WAAUY,IAAAA,gBAEnDC,SAAKlB,IAAK,CAACmB,EAAcA,EAAad,GAAQc,EAAgBX,aAC3DS"}